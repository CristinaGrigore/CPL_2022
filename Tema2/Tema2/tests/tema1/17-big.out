program
  class
    List
    IO
    attribute
      elem
      Object
    attribute
      next
      List
    method
      init
      formal
        e
        Object
      formal
        n
        List
      List
      block
        <-
          elem
line 13:21, e undefined
        <-
          next
line 14:21, n undefined
line 15:13, self undefined
    method
      print
      IO
      let
        local
          str
          String
          case
            elem
            case branch
              s
              String
line 25:35, s undefined
            case branch
              n
              Int
              .
                new
                  A2I
                i2a
line 26:44, n undefined
            case branch
              o
              Object
              block
                implicit dispatch
                  abort
                
        block
          implicit dispatch
            out_string
            .
line 31:28, str undefined
              concat
               
          if
            isvoid
              next
            implicit dispatch
              out_string
              

            .
              next
              print
  class
    Main
    IO
    method
      main
      Object
      block
        let
          local
            x
            Int
            0
          local
            y
            String
            !
          local
            z
            Int
            +
line 42:28, x undefined
              2
          local
            empty
            List
          local
            list
            List
            .
              new
                List
              init
line 45:35, x undefined
              .
                new
                  List
                init
line 46:39, y undefined
                .
                  new
                    List
                  init
line 47:43, z undefined
line 47:46, empty undefined
          .
line 49:17, list undefined
            print
        let
          local
            n
            Int
            .
              implicit dispatch
                out_string
                CalculÄƒm factorial pentru: 
              in_int
          block
            .
              .
                implicit dispatch
                  out_string
                  Factorial recursiv: 
                out_int
                implicit dispatch
                  fact_rec
line 55:73, n undefined
              out_string
              

            .
              .
                implicit dispatch
                  out_string
                  Factorial iterativ: 
                out_int
                implicit dispatch
                  fact_iter
line 57:74, n undefined
              out_string
              

    method
      fact_rec
      formal
        n
        Int
      Int
      if
        =
line 65:12, n undefined
          0
        1
        *
line 65:30, n undefined
          implicit dispatch
            fact_rec
            -
line 65:43, n undefined
              1
    method
      fact_iter
      formal
        n
        Int
      Int
      let
        local
          res
          Int
          1
        block
          while
            not
              =
line 75:29, n undefined
                0
            block
              <-
line 77:25, res undefined
                *
line 77:32, res undefined
line 77:38, n undefined
              <-
line 78:25, n undefined
                -
line 78:30, n undefined
                  1
line 81:17, res undefined
